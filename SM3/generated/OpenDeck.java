/*
 * generated by Fujaba - CodeGen2
 */
import de.uni_kassel.features.annotation.util.Property; // requires Fujaba5/libs/features.jar in classpath
import de.uni_kassel.features.ReferenceHandler; // requires Fujaba5/libs/features.jar in classpath


public class OpenDeck
{



   private  OpenDeck ()
   {
   }

   /**
    * <pre>
    *           0..1     is on     0..1
    * OpenDeck ------------------------- Card
    *           openDeck               card
    * </pre>
    */
   public static final String PROPERTY_CARD = "card";

   @Property( name = PROPERTY_CARD, partner = Card.PROPERTY_OPEN_DECK, kind = ReferenceHandler.ReferenceKind.TO_ONE,
         adornment = ReferenceHandler.Adornment.NONE)
   private Card card;

   @Property( name = PROPERTY_CARD )
   public boolean setCard (Card value)
   {
      boolean changed = false;

      if (this.card != value)
      {
      
         Card oldValue = this.card;
         OpenDeck source = this;
         if (this.card != null)
         {
            this.card = null;
            oldValue.setOpenDeck (null);
         }
         this.card = value;

         if (value != null)
         {
            value.setOpenDeck (this);
         }
         changed = true;
      
      }
      return changed;
   }

   @Property( name = PROPERTY_CARD )
   public OpenDeck withCard (Card value)
   {
      setCard (value);
      return this;
   }

   public Card getCard ()
   {
      return this.card;
   }

   public static final String PROPERTY_CURRENT_SUITE = "currentSuite";

   @Property( name = PROPERTY_CURRENT_SUITE, kind = ReferenceHandler.ReferenceKind.ATTRIBUTE )
   private String currentSuite;

   @Property( name = PROPERTY_CURRENT_SUITE )
   public void setCurrentSuite (String value)
   {
      this.currentSuite = value;
   }

   public OpenDeck withCurrentSuite (String value)
   {
      setCurrentSuite (value);
      return this;
   }

   @Property( name = PROPERTY_CURRENT_SUITE )
   public String getCurrentSuite ()
   {
      return this.currentSuite;
   }

   public static OpenDeck getInstance ()
   {

      return mInstance;
   }

   public static final String PROPERTY_M_INSTANCE = "mInstance";

   @Property( name = PROPERTY_M_INSTANCE, kind = ReferenceHandler.ReferenceKind.ATTRIBUTE )
   private static OpenDeck mInstance;


   public void removeYou()
   {
      this.setCard (null);
   }
}


