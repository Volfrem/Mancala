/*
 * generated by Fujaba - CodeGen2
 */
import de.uni_kassel.features.annotation.util.Property; // requires Fujaba5/libs/features.jar in classpath
import de.uni_kassel.features.ReferenceHandler; // requires Fujaba5/libs/features.jar in classpath


public class Card
{



   /**
    * <pre>
    *           0..1     onTop     0..1
    * Card ------------------------- Card
    *           card               card
    * </pre>
    */
   public static final String PROPERTY_CARD = "card";

   @Property( name = PROPERTY_CARD, partner = Card.PROPERTY_CARD, kind = ReferenceHandler.ReferenceKind.TO_ONE,
         adornment = ReferenceHandler.Adornment.NONE)
   private Card card;

   @Property( name = PROPERTY_CARD )
   public boolean setCard (Card value)
   {
      boolean changed = false;

      if (this.card != value)
      {
      
         Card oldValue = this.card;
         Card source = this;
         if (this.card != null)
         {
            this.card = null;
            oldValue.setCard (null);
         }
         this.card = value;

         if (value != null)
         {
            value.setCard (this);
         }
         changed = true;
      
      }
      return changed;
   }

   @Property( name = PROPERTY_CARD )
   public Card withCard (Card value)
   {
      setCard (value);
      return this;
   }

   public Card getCard ()
   {
      return this.card;
   }

   /**
    * <pre>
    *           0..*     is on top of     0..1
    * Card ------------------------- Deck
    *           card               deck
    * </pre>
    */
   public static final String PROPERTY_DECK = "deck";

   @Property( name = PROPERTY_DECK, partner = Deck.PROPERTY_CARD, kind = ReferenceHandler.ReferenceKind.TO_ONE,
         adornment = ReferenceHandler.Adornment.COMPOSITION)
   private Deck deck;

   @Property( name = PROPERTY_DECK )
   public boolean setDeck (Deck value)
   {
      boolean changed = false;

      if (this.deck != value)
      {
      
         Deck oldValue = this.deck;
         Card source = this;
         if (this.deck != null)
         {
            this.deck = null;
            oldValue.removeFromCard (this);
         }
         this.deck = value;

         if (value != null)
         {
            value.addToCard (this);
         }
         changed = true;
      
      }
      return changed;
   }

   @Property( name = PROPERTY_DECK )
   public Card withDeck (Deck value)
   {
      setDeck (value);
      return this;
   }

   public Deck getDeck ()
   {
      return this.deck;
   }

   public static final String PROPERTY_IS_TOP = "isTop";

   @Property( name = PROPERTY_IS_TOP, kind = ReferenceHandler.ReferenceKind.ATTRIBUTE )
   private boolean isTop;

   @Property( name = PROPERTY_IS_TOP )
   public void setIsTop (boolean value)
   {
      this.isTop = value;
   }

   public Card withIsTop (boolean value)
   {
      setIsTop (value);
      return this;
   }

   @Property( name = PROPERTY_IS_TOP )
   public boolean isIsTop ()
   {
      return this.isTop;
   }

   public static final String PROPERTY_NAME = "name";

   @Property( name = PROPERTY_NAME, kind = ReferenceHandler.ReferenceKind.ATTRIBUTE )
   private String name;

   @Property( name = PROPERTY_NAME )
   public void setName (String value)
   {
      this.name = value;
   }

   public Card withName (String value)
   {
      setName (value);
      return this;
   }

   @Property( name = PROPERTY_NAME )
   public String getName ()
   {
      return this.name;
   }

   /**
    * <pre>
    *           0..1     is on     0..1
    * Card ------------------------- OpenDeck
    *           card               openDeck
    * </pre>
    */
   public static final String PROPERTY_OPEN_DECK = "openDeck";

   @Property( name = PROPERTY_OPEN_DECK, partner = OpenDeck.PROPERTY_CARD, kind = ReferenceHandler.ReferenceKind.TO_ONE,
         adornment = ReferenceHandler.Adornment.NONE)
   private OpenDeck openDeck;

   @Property( name = PROPERTY_OPEN_DECK )
   public boolean setOpenDeck (OpenDeck value)
   {
      boolean changed = false;

      if (this.openDeck != value)
      {
      
         OpenDeck oldValue = this.openDeck;
         Card source = this;
         if (this.openDeck != null)
         {
            this.openDeck = null;
            oldValue.setCard (null);
         }
         this.openDeck = value;

         if (value != null)
         {
            value.setCard (this);
         }
         changed = true;
      
      }
      return changed;
   }

   @Property( name = PROPERTY_OPEN_DECK )
   public Card withOpenDeck (OpenDeck value)
   {
      setOpenDeck (value);
      return this;
   }

   public OpenDeck getOpenDeck ()
   {
      return this.openDeck;
   }

   /**
    * <pre>
    *           0..*     is on hand     0..1
    * Card ------------------------- Player
    *           card               player
    * </pre>
    */
   public static final String PROPERTY_PLAYER = "player";

   @Property( name = PROPERTY_PLAYER, partner = Player.PROPERTY_CARD, kind = ReferenceHandler.ReferenceKind.TO_ONE,
         adornment = ReferenceHandler.Adornment.COMPOSITION)
   private Player player;

   @Property( name = PROPERTY_PLAYER )
   public boolean setPlayer (Player value)
   {
      boolean changed = false;

      if (this.player != value)
      {
      
         Player oldValue = this.player;
         Card source = this;
         if (this.player != null)
         {
            this.player = null;
            oldValue.removeFromCard (this);
         }
         this.player = value;

         if (value != null)
         {
            value.addToCard (this);
         }
         changed = true;
      
      }
      return changed;
   }

   @Property( name = PROPERTY_PLAYER )
   public Card withPlayer (Player value)
   {
      setPlayer (value);
      return this;
   }

   public Player getPlayer ()
   {
      return this.player;
   }

   public static final String PROPERTY_SUITE = "suite";

   @Property( name = PROPERTY_SUITE, kind = ReferenceHandler.ReferenceKind.ATTRIBUTE )
   private String suite;

   @Property( name = PROPERTY_SUITE )
   public void setSuite (String value)
   {
      this.suite = value;
   }

   public Card withSuite (String value)
   {
      setSuite (value);
      return this;
   }

   @Property( name = PROPERTY_SUITE )
   public String getSuite ()
   {
      return this.suite;
   }

   public static final String PROPERTY_VALUE = "value";

   @Property( name = PROPERTY_VALUE, kind = ReferenceHandler.ReferenceKind.ATTRIBUTE )
   private String value;

   @Property( name = PROPERTY_VALUE )
   public void setValue (String value)
   {
      this.value = value;
   }

   public Card withValue (String value)
   {
      setValue (value);
      return this;
   }

   @Property( name = PROPERTY_VALUE )
   public String getValue ()
   {
      return this.value;
   }

   public void removeYou()
   {
      this.setCard (null);
      final Deck tmpDeck = this.getDeck ();
      if (tmpDeck != null)
      {
         tmpDeck.removeYou ();
      }
      this.setOpenDeck (null);
      final Player tmpPlayer = this.getPlayer ();
      if (tmpPlayer != null)
      {
         tmpPlayer.removeYou ();
      }
   }
}


